{"version":3,"sources":["components/Cards/Cards.module.css","Api/index.js","components/Chart/Chart.js","components/Cards/Cards.js","components/Country/Country.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/Country/Country.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","deaths","lastUpdate","recovered","console","log","fetchDailyData","modified","map","i","total","date","reportDate","countries","name","Chart","useState","dailyData","setDaily","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","classes","container","Cards","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Country","handleCountry","setCoutries","fetchCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","c","key","App","state","handleCountryChange","fetchedData","setState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c857d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n  try {\n    const {\n      data: { confirmed, deaths, lastUpdate, recovered },\n    } = await axios.get(changeableUrl);\n\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modified = data.map((i) => ({\n      confirmed: i.confirmed.total,\n      deaths: i.deaths.total,\n      date: i.reportDate,\n    }));\n    return modified;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const countries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((i) => i.name);\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../Api/index\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport classes from \"./Chart.module.css\";\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDaily] = useState([]);\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDaily(await fetchDailyData());\n    };\n\n    fetchApi();\n  }, []);\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"red\",\n            backgroundColor: \"rgba(255,0,0,0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  const barChart = confirmed ? (\n    <Bar\n      data={{\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            label: \"People\",\n            backgroundColor: [\n              \"rgba(0, 0, 255, 0.5)\",\n              \"rgba(0, 255, 255, 0.5)\",\n              \"rgba(255, 0, 50, 0.5)\",\n            ],\n            data: [confirmed.value, recovered.value, deaths.value],\n          },\n        ],\n      }}\n      options={{\n        legend: { display: false },\n        title: { display: true, text: ` ${country}` },\n      }}\n    />\n  ) : null;\n\n  return (\n    <div className={classes.container}>{country ? barChart : lineChart}</div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport classes from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed || !recovered || !deaths || !lastUpdate) {\n    return \"Loading ...\";\n  }\n\n  return (\n    <div className={classes.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(classes.card, classes.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={confirmed.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(classes.card, classes.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={recovered.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recovers from COVID19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          md={3}\n          component={Card}\n          className={cx(classes.card, classes.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp\n                start={0}\n                end={deaths.value}\n                duration={2.5}\n                separator=\",\"\n              />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">Deaths caused by COVID19</Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport classes from \"./Country.module.css\";\nimport { countries } from \"../../Api/index\";\n\nconst Country = ({ handleCountry }) => {\n  const [country, setCoutries] = useState([]);\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setCoutries(await countries());\n    };\n    fetchCountries();\n  }, [setCoutries]);\n  return (\n    <FormControl className={classes.formControl}>\n      <NativeSelect default=\"\" onChange={(e) => handleCountry(e.target.value)}>\n        <option value=\"\">Global</option>\n        {country.map((c, i) => (\n          <option key={i} value={c}>\n            {c}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Country;\n","import React, { Component } from \"react\";\nimport classes from \"./App.module.css\";\nimport { Chart, Cards, Country } from \"./components\";\nimport { fetchData } from \"./Api/index\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    //fetch data\n    const fetchedData = await fetchData(country);\n    //set state\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={classes.container}>\n        <Cards data={data} />\n        <Country handleCountry={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__3h-YE\"};"],"sourceRoot":""}